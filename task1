#include <SPI.h> 
#include <MFRC522.h> 
#include <WiFi.h> 
#include <HTTPClient.h> 
 
 
#define SS_PIN 5 // Slave Select Pin for RFID module 
#define RST_PIN 4 // Reset Pin for RFID module 
 
MFRC522 rfid(SS_PIN, RST_PIN); // Create MFRC522 instance. 
 
 char ssid[] = "YOUR_WIFI_SSID"; 
char password[] = "YOUR_WIFI_PASSWORD"; 
 
 const char* host = "script.google.com"; const int httpsPort = 443; 
 const char* scriptId = "YOUR_SCRIPT_ID"; 
 
 void setup() { 
Serial.begin(9600); // Initialize serial communications SPI.begin(); // Init SPI bus 
rfid.PCD_Init(); // Init MFRC522 
 
 
// Connect to Wi-Fi WiFi.begin(ssid, password); while (WiFi.status() != WL_CONNECTED) { delay(1000); 
Serial.println("Connecting to WiFi.."); 
} 
 
 
Serial.println("Connected to WiFi."); 
 
 
// Initialize RFID reader rfid.PCD_Init(); 
} 
 
 void loop() { if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) { String tagData = ""; for (byte i = 0; i < rfid.uid.size; i++) { tagData += String(rfid.uid.uidByte[i] < 0x10 ? "0" : ""); tagData += String(rfid.uid.uidByte[i], HEX); 
} 
Serial.println("Tag Data: " + tagData); postToGoogleSheets(tagData); // Post RFID data to Google Sheets delay(1000); // Delay to avoid reading the same tag multiple times 
} 
} 
 
 void postToGoogleSheets(String tagData) { WiFiClientSecure client; if (!client.connect(host, httpsPort)) { Serial.println("Connection failed."); return; 
} 
 
 
// Create URL for Google Sheets web app script 
String url = "/macros/s/" + String(scriptId) + "/exec?tagData=" + tagData; 
 
 
Serial.print("Requesting URL: "); 
Serial.println(url); 
 
// Make HTTP GET request client.print(String("GET ") + url + " HTTP/1.1\r\n" + 
"Host: " + host + "\r\n" + 
"Connection: close\r\n\r\n"); 
 
 
Serial.println("Request sent."); 
 
 while (client.connected()) { if (client.available()) { 
String line = client.readStringUntil('\r'); 
Serial.print(line); 
} 
} 
 
 
Serial.println(); 
Serial.println("Closing connection."); 
} 
